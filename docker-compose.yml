version: '3.5'

services:
    mongodb_ice:
      container_name: mongodb_ice
      image: mongo:latest
      ports:
        - 27018:27017
    minio_ice:
      image: minio/minio
      container_name: minio_ice
      environment:
        - MINIO_ROOT_USER=ift_bigdata
        - MINIO_ROOT_PASSWORD=minio_password
        - MINIO_DOMAIN=minio_ice
      ports:
        - 9001:9001
        - 9000:9000
      command: ["server", "/data", "--console-address", ":9001"]
    minio_client:
      container_name: minio_client
      depends_on:
        - minio_ice
      image: minio/mc
      environment:
        - AWS_ACCESS_KEY_ID=ift_bigdata
        - AWS_SECRET_ACCESS_KEY=minio_password
        - AWS_REGION=us-east-1
      entrypoint: >
        /bin/bash -c "
        until (/usr/bin/mc config host add minio http://minio_ice:9000 ift_bigdata minio_password) do echo '...waiting...' && sleep 1; done;
        sleep 10 && /usr/bin/mc rm -r --force minio/icebergwarehouse;
        sleep 10 && /usr/bin/mc mb minio/icebergwarehouse;
        mc anonymous set public minio/icebergwarehouse;
        tail -f /dev/null
        "      
    iceberg_rest_ice:
      container_name: iceberg_rest_ice
      image: tabulario/iceberg-rest
      ports:
        - "8181:8181"
      environment:
        - AWS_ACCESS_KEY_ID=ift_bigdata
        - AWS_SECRET_ACCESS_KEY=minio_password
        - AWS_REGION=us-east-1
        - CATALOG_S3_PATH__STYLE__ACCESS=true
        - CATALOG_WAREHOUSE=s3://icebergwarehouse/
        - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
        - CATALOG_S3_ENDPOINT=http://minio_ice:9000
      depends_on:
        - minio_ice
    pythonice:
      container_name: pythonice
      build: 
        context: ./
        dockerfile: ./apps/Dockerfile
      ports:
        - 8010:8010
      depends_on:
        - mongodb_ice
        - minio_ice
        - iceberg_rest_ice
      volumes:
        - type: bind
          source: ./
          target: /home/minio_iceberg_duckdb

networks:
  proxynet:
    name: database_network
